{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Apis } from '../utils/apis';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, toastr, router) {\n    this.http = http;\n    this.toastr = toastr;\n    this.router = router;\n    this.isLogedin = false;\n    this.tokenRes = {\n      token: ''\n    };\n    this.token = '';\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: this.token\n    });\n    this.checkIsLogedIn();\n  }\n  checkIsLogedIn() {\n    if (localStorage.getItem('token') == null) {\n      this.isLogedin = false;\n    }\n    if (localStorage.getItem('token') != null) {\n      this.isLogedin = true;\n    }\n  }\n  logout() {\n    localStorage.removeItem('token');\n    checkIsLogedIn();\n  }\n  login(userData) {\n    this.http.post(Apis.login, userData).subscribe({\n      next: res => {\n        this.tokenRes = res;\n        localStorage.setItem('token', 'bearer' + this.tokenRes.token);\n        this.router.navigateByUrl('');\n      },\n      error: error => {\n        this.toastr.warning(error.error.message, '', {\n          progressBar: true\n        });\n      }\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAEEA,WAAW,QAGN,sBAAsB;AAE7B,SAASC,IAAI,QAAQ,eAAe;;;;;AAOpC,OAAM,MAAOC,WAAW;EAYtBC,YAAoBC,IAAgB,EAAUC,MAAqB,EAASC,MAAa;IAArE,SAAI,GAAJF,IAAI;IAAsB,WAAM,GAANC,MAAM;IAAwB,WAAM,GAANC,MAAM;IAX3E,cAAS,GAAY,KAAK;IAEzB,aAAQ,GAAQ;MAAEC,KAAK,EAAE;IAAE,CAAE;IAE7B,UAAK,GAAW,EAAE;IAEnB,YAAO,GAAQ,IAAIP,WAAW,CAAC;MACpC,cAAc,EAAE,iCAAiC;MACjDQ,aAAa,EAAE,IAAI,CAACD;KACrB,CAAC;IAGA,IAAI,CAACE,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;MACzC,IAAI,CAACC,SAAS,GAAG,KAAK;;IAExB,IAAIF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;MACzC,IAAI,CAACC,SAAS,GAAG,IAAI;;EAEzB;EACAC,MAAM;IACJH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCL,cAAc,EAAE;EAClB;EAEAM,KAAK,CAACC,QAAc;IAClB,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAChB,IAAI,CAACc,KAAK,EAAEC,QAAQ,CAAC,CAACE,SAAS,CAAC;MAC7CC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,QAAQ,GAAGD,GAAG;QACnBV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAE,QAAQ,GAAG,IAAI,CAACD,QAAQ,CAACd,KAAK,CAAC;QAC7D,IAAI,CAACD,MAAM,CAACiB,aAAa,CAAC,EAAE,CAAC;MAC/B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACnB,MAAM,CAACoB,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,EAAE,EAAE,EAAE;UAC3CC,WAAW,EAAE;SACd,CAAC;MACJ;KACD,CAAC;EACJ;;AA1CWzB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA0B,SAAX1B,WAAW;EAAA2B,YAFV;AAAM","names":["HttpHeaders","Apis","AuthService","constructor","http","toastr","router","token","Authorization","checkIsLogedIn","localStorage","getItem","isLogedin","logout","removeItem","login","userData","post","subscribe","next","res","tokenRes","setItem","navigateByUrl","error","warning","message","progressBar","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\auth.service.ts"],"sourcesContent":["import { Router } from '@angular/router';\nimport { user } from './../models/user';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Apis } from '../utils/apis';\nimport { GlobalData } from '../utils/data';\nimport { catchError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public isLogedin: boolean = false;\n  public userData: any;\n  private tokenRes: any = { token: '' };\n\n  private token: string = '';\n\n  public headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    Authorization: this.token,\n  });\n\n  constructor(private http: HttpClient, private toastr: ToastrService,private router:Router) {\n    this.checkIsLogedIn();\n  }\n\n  checkIsLogedIn() {\n    if (localStorage.getItem('token') == null) {\n      this.isLogedin = false;\n    }\n    if (localStorage.getItem('token') != null) {\n      this.isLogedin = true;\n    }\n  }\n  logout(){\n    localStorage.removeItem('token');\n    checkIsLogedIn();\n  }\n\n  login(userData: user) {\n    this.http.post(Apis.login, userData).subscribe({\n      next: (res) => {\n        this.tokenRes = res;\n        localStorage.setItem('token', 'bearer' + this.tokenRes.token);\n        this.router.navigateByUrl('');\n      },\n      error: (error) => {\n        this.toastr.warning(error.error.message, '', {\n          progressBar: true,\n        });\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}