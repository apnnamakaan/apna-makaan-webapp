{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nlet FileInputComponent = class FileInputComponent {\n  constructor(http) {\n    this.http = http;\n    this.imageSrc = '';\n    this.getFileEvent = new EventEmitter();\n  }\n  uploadImage(image) {\n    var formData = new FormData();\n    formData.append('file', image);\n    this.http.post(Apis.image.uploadImage, formData, {\n      headers: this.headers\n    }).subscribe({\n      next: res => {\n        console.warn(res);\n      },\n      error: error => {\n        console.warn(error);\n        this.errorService.handelError(error);\n      }\n    });\n  }\n  readURL(event) {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n      this.getFileEvent.emit(this.file);\n      const reader = new FileReader();\n      reader.onload = e => this.imageSrc = reader.result;\n      reader.readAsDataURL(this.file);\n    }\n  }\n};\n__decorate([Input()], FileInputComponent.prototype, \"file\", void 0);\n__decorate([Output()], FileInputComponent.prototype, \"getFileEvent\", void 0);\nFileInputComponent = __decorate([Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: []\n})], FileInputComponent);\nexport { FileInputComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAO/D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YAAoBC,IAAS;IAAT,SAAI,GAAJA,IAAI;IALjB,aAAQ,GAAQ,EAAE;IAGf,iBAAY,GAAG,IAAIH,YAAY,EAAO;EAIhD;EAEAI,WAAW,CAACC,KAAU;IACpB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,KAAK,CAAC;IAC9B,IAAI,CAACF,IAAI,CACNM,IAAI,CAACC,IAAI,CAACL,KAAK,CAACD,WAAW,EAAEE,QAAQ,EAAE;MACtCK,OAAO,EAAE,IAAI,CAACA;KACf,CAAC,CACDC,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZC,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC;MACnB,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC;QACnB,IAAI,CAACC,YAAY,CAACC,WAAW,CAACF,KAAK,CAAC;MACtC;KACD,CAAC;EACN;EAEAG,OAAO,CAACC,KAAU;IAChB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C,IAAI,CAACC,IAAI,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAEjC,IAAI,CAACE,YAAY,CAACC,IAAI,CAAC,IAAI,CAACF,IAAI,CAAC;MAElC,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAM,IAAI,CAACC,QAAQ,GAAGJ,MAAM,CAACK,MAAO;MACtDL,MAAM,CAACM,aAAa,CAAC,IAAI,CAACT,IAAI,CAAC;;EAElC;CACD;AArCUU,YAARpC,KAAK,EAAE,gDAAW;AAEToC,YAATnC,MAAM,EAAE,wDAAwC;AAJtCE,kBAAkB,eAL9BJ,SAAS,CAAC;EACTsC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,MAAM,EAAE;CACT,CAAC,GACWpC,kBAAkB,CAuC9B;SAvCYA,kBAAkB","names":["Component","Input","Output","EventEmitter","FileInputComponent","constructor","http","uploadImage","image","formData","FormData","append","post","Apis","headers","subscribe","next","res","console","warn","error","errorService","handelError","readURL","event","target","files","file","getFileEvent","emit","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","__decorate","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\file-input\\file-input.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: [],\n})\nexport class FileInputComponent {\n  public imageSrc: any = '';\n  @Input() file: any;\n\n  @Output() getFileEvent = new EventEmitter<any>();\n\n  constructor(private http:Http){\n\n  }\n\n  uploadImage(image: any) {\n    var formData = new FormData();\n    formData.append('file', image);\n    this.http\n      .post(Apis.image.uploadImage, formData, {\n        headers: this.headers,\n      })\n      .subscribe({\n        next: (res) => {\n          console.warn(res);\n        },\n        error: (error) => {\n          console.warn(error);\n          this.errorService.handelError(error);\n        },\n      });\n  }\n\n  readURL(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n\n      this.getFileEvent.emit(this.file);\n\n     const reader = new FileReader();\n     reader.onload = (e) => (this.imageSrc = reader.result);\n     reader.readAsDataURL(this.file);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}