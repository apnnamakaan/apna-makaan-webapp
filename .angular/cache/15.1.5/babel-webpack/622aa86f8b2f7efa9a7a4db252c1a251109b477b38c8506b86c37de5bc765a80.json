{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../../services/helper.service\";\nexport class FileInputComponent {\n  constructor(http, helperService) {\n    this.http = http;\n    this.helperService = helperService;\n    this.imageSrc = '';\n    this.imageUrl = '';\n    this.getFileEvent = new EventEmitter();\n    this.imageRes = {\n      status: '',\n      message: '',\n      image: ''\n    };\n  }\n  // uploadImage(image: any) {\n  //   var formData = new FormData();\n  //   formData.append('file', image);\n  //   this.http.post(Apis.image.uploadImage, formData).subscribe({\n  //     next: (res) => {\n  //       this.imageRes = res;\n  //       this.getFileEvent.emit(this.imageRes.image);\n  //     },\n  //     error: (error) => {\n  //       this.helperService.handelError(error);\n  //     },\n  //   });\n  // }\n  readURL(event) {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n      this.getFileEvent(this.file);\n      const reader = new FileReader();\n      reader.onload = e => this.imageSrc = reader.result;\n      reader.readAsDataURL(this.file);\n    }\n  }\n}\nFileInputComponent.ɵfac = function FileInputComponent_Factory(t) {\n  return new (t || FileInputComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.HelperService));\n};\nFileInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileInputComponent,\n  selectors: [[\"app-file-input\"]],\n  inputs: {\n    file: \"file\"\n  },\n  outputs: {\n    getFileEvent: \"getFileEvent\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"mb-3\", \"xl:w-full\", \"border\"], [\"type\", \"file\", 1, \"block\", \"w-full\", \"h-48\", \"px-3\", \"py-1.5\", \"text-base\", \"transition\", \"ease-in-out\", \"overflow-hidden\", \"text-white\", \"font-bold\", \"bg-cover\", 3, \"change\"], [\"name\", \"dd\", \"type\", \"file\", \"accept\", \"image/*\", 1, \"w-full\", \"form-control\", \"h-full\"]],\n  template: function FileInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵlistener(\"change\", function FileInputComponent_Template_div_change_1_listener($event) {\n        return ctx.readURL($event);\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMapInterpolate1(\"background-image: url(\", ctx.imageSrc, \");\");\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAAmCA,YAAY,QAAQ,eAAe;;;;AAOtE,OAAM,MAAOC,kBAAkB;EAQ7BC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;IAPpD,aAAQ,GAAQ,EAAE;IAGlB,aAAQ,GAAW,EAAE;IAElB,iBAAY,GAAG,IAAIJ,YAAY,EAAO;IAIzC,aAAQ,GAAQ;MACrBK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;KACR;EAN4E;EAQ7E;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,OAAO,CAACC,KAAU;IAChB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C,IAAI,CAACC,IAAI,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAEjC,IAAI,CAACE,YAAY,CAAC,IAAI,CAACD,IAAI,CAAC;MAE5B,MAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAM,IAAI,CAACC,QAAQ,GAAGJ,MAAM,CAACK,MAAO;MACtDL,MAAM,CAACM,aAAa,CAAC,IAAI,CAACR,IAAI,CAAC;;EAEnC;;AAxCWX,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAoB;EAAAC;IAAAV;EAAA;EAAAW;IAAAV;EAAA;EAAAW;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,8BAAmC;MACdA;QAAA,OAAYC,mBAAe;MAAA,EAAC;MAazCD,2BAAiF;MACrFA,iBAAM;;;MAFIA,eAA4C;MAA5CA,uEAA4C","names":["EventEmitter","FileInputComponent","constructor","http","helperService","status","message","image","readURL","event","target","files","file","getFileEvent","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\file-input\\file-input.component.ts","C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\file-input\\file-input.component.html"],"sourcesContent":["import { HelperService } from './../../services/helper.service';\nimport { Apis } from './../../utils/apis';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: [],\n})\nexport class FileInputComponent {\n  public imageSrc: any = '';\n  @Input() file: any;\n\n  public imageUrl: string = '';\n\n  @Output() getFileEvent = new EventEmitter<any>();\n\n  constructor(private http: HttpClient, private helperService: HelperService) {}\n\n  public imageRes: any = {\n    status: '',\n    message: '',\n    image: '',\n  };\n\n  // uploadImage(image: any) {\n  //   var formData = new FormData();\n  //   formData.append('file', image);\n  //   this.http.post(Apis.image.uploadImage, formData).subscribe({\n  //     next: (res) => {\n  //       this.imageRes = res;\n  //       this.getFileEvent.emit(this.imageRes.image);\n  //     },\n  //     error: (error) => {\n  //       this.helperService.handelError(error);\n  //     },\n  //   });\n  // }\n\n  readURL(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n\n      this.getFileEvent(this.file);\n      \n      const reader = new FileReader();\n      reader.onload = (e) => (this.imageSrc = reader.result);\n      reader.readAsDataURL(this.file);\n    }\n  }\n}\n","<div class=\"mb-3 xl:w-full border\">\n    <div type=\"file\" (change)=\" readURL($event);\" class=\" \n    block\n    w-full\n    h-48\n    px-3\n    py-1.5\n    text-base\n    transition\n    ease-in-out\n    overflow-hidden\n    text-white\n    font-bold\n    bg-cover\" style=\"background-image: url({{imageSrc}});\">\n        <input name=\"dd\" class=\"w-full form-control h-full\" type=\"file\" accept=\"image/*\">\n    </div>\n\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}