{"ast":null,"code":"import { Apis } from '../utils/apis';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class UserService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    this.apiResponse = {\n      status: '',\n      message: ''\n    };\n    this.userData = {\n      name: '',\n      phone: 0,\n      email: '',\n      password: ''\n    };\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      authorization: this.getToken()\n    });\n  }\n  getToken() {\n    return localStorage.getItem('token') || '';\n  }\n  getUserData() {\n    return this.userData;\n  }\n  getUser() {\n    this.http.get(Apis.user.getUserByEmail + 'admin@gmail.com', {\n      headers: this.headers\n    }).subscribe({\n      next: res => {\n        this.userData = res;\n        console.log();\n      },\n      error: error => {\n        this.apiResponse = error.error;\n        this.toastr.warning(this.apiResponse.message, '', {\n          progressBar: true\n        });\n      }\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAAqBC,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,WAAW;EAkBtBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAjB7C,gBAAW,GAAQ;MACxBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;KACV;IAEM,aAAQ,GAAQ;MACrBC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAEM,YAAO,GAAQ,IAAIV,WAAW,CAAC;MACpC,cAAc,EAAE,iCAAiC;MACjDW,aAAa,EAAE,IAAI,CAACC,QAAQ;KAC7B,CAAC;EAEoE;EAEtEA,QAAQ;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAC5C;EAEAC,WAAW;IACT,OAAO,IAAI,CAACC,QAAQ;EACtB;EAEAC,OAAO;IACL,IAAI,CAACd,IAAI,CACNe,GAAG,CAACnB,IAAI,CAACoB,IAAI,CAACC,cAAc,GAAG,iBAAiB,EAAE;MACjDC,OAAO,EAAE,IAAI,CAACA;KACf,CAAC,CACDC,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACR,QAAQ,GAAGQ,GAAG;QACnBC,OAAO,CAACC,GAAG,EAAE;MACf,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACC,WAAW,GAAGD,KAAK,CAACA,KAAK;QAC9B,IAAI,CAACvB,MAAM,CAACyB,OAAO,CAAC,IAAI,CAACD,WAAW,CAACtB,OAAO,EAAE,EAAE,EAAE;UAChDwB,WAAW,EAAE;SACd,CAAC;MACJ;KACD,CAAC;EACN;;AA7CW7B,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA8B,SAAX9B,WAAW;EAAA+B,YAFV;AAAM","names":["Apis","HttpHeaders","UserService","constructor","http","toastr","status","message","name","phone","email","password","authorization","getToken","localStorage","getItem","getUserData","userData","getUser","get","user","getUserByEmail","headers","subscribe","next","res","console","log","error","apiResponse","warning","progressBar","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Apis } from '../utils/apis';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { user } from './../models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  public apiResponse: any = {\n    status: '',\n    message: '',\n  };\n\n  public userData: any = {\n    name: '',\n    phone: 0,\n    email: '',\n    password: '',\n  };\n\n  public headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    authorization: this.getToken(),\n  });\n\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\n\n  getToken() {\n    return localStorage.getItem('token') || '';\n  }\n\n  getUserData(){\n    return this.userData;\n  }\n\n  getUser() {\n    this.http\n      .get(Apis.user.getUserByEmail + 'admin@gmail.com', {\n        headers: this.headers,\n      })\n      .subscribe({\n        next: (res) => {\n          this.userData = res;\n          console.log()\n        },\n        error: (error) => {\n          this.apiResponse = error.error;\n          this.toastr.warning(this.apiResponse.message, '', {\n            progressBar: true,\n          });\n        },\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}