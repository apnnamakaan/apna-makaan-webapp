{"ast":null,"code":"import { Apis } from '../utils/apis';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.token = localStorage.getItem('token') || '';\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: this.token\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\ngetUser();\n{\n  this.http.get(Apis.user.getUser, this.headers).subscribe({\n    next: res => {\n      this.apiResponse = res;\n      this.toastr.success(this.apiResponse.message, '', {\n        progressBar: true\n      });\n      this.checkIsLogedIn();\n    },\n    error: error => {\n      this.apiResponse = error.error;\n      this.toastr.warning(this.apiResponse.message, '', {\n        progressBar: true\n      });\n    }\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAAqBC,WAAW,QAAQ,sBAAsB;;AAM9D,OAAM,MAAOC,WAAW;EAStBC;IAPO,UAAK,GAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAG,EAAE;IAEjD,YAAO,GAAQ,IAAIJ,WAAW,CAAC;MACpC,cAAc,EAAE,iCAAiC;MACjDK,aAAa,EAAE,IAAI,CAACC;KACrB,CAAC;EAEiB;;AATRL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAM,SAAXN,WAAW;EAAAO,YAFV;AAAM;AAclBC,OAAO,EAAE;AAAC;EACR,IAAI,CAACC,IAAI,CAACC,GAAG,CAACZ,IAAI,CAACa,IAAI,CAACH,OAAO,EAAC,IAAI,CAACI,OAAO,CAAC,CAACC,SAAS,CAAC;IACtDC,IAAI,EAAGC,GAAG,IAAI;MACZ,IAAI,CAACC,WAAW,GAAGD,GAAG;MACtB,IAAI,CAACE,MAAM,CAACC,OAAO,CAAC,IAAI,CAACF,WAAW,CAACG,OAAO,EAAE,EAAE,EAAE;QAChDC,WAAW,EAAE;OACd,CAAC;MACF,IAAI,CAACC,cAAc,EAAE;IACvB,CAAC;IACDC,KAAK,EAAGA,KAAK,IAAI;MACf,IAAI,CAACN,WAAW,GAAGM,KAAK,CAACA,KAAK;MAC9B,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,IAAI,CAACP,WAAW,CAACG,OAAO,EAAE,EAAE,EAAE;QAChDC,WAAW,EAAE;OACd,CAAC;IACJ;GACD,CAAC","names":["Apis","HttpHeaders","UserService","constructor","localStorage","getItem","Authorization","token","factory","providedIn","getUser","http","get","user","headers","subscribe","next","res","apiResponse","toastr","success","message","progressBar","checkIsLogedIn","error","warning"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Apis } from '../utils/apis';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { user } from './../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n\n  public token:string = localStorage.getItem('token')|| '';\n\n  public headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    Authorization: this.token,\n  });\n\n  constructor() {    private http: HttpClient,\n    private toastr: ToastrService,}\n\n  getUser() {\n    this.http.get(Apis.user.getUser,this.headers).subscribe({\n      next: (res) => {\n        this.apiResponse = res;\n        this.toastr.success(this.apiResponse.message, '', {\n          progressBar: true,\n        });\n        this.checkIsLogedIn();\n      },\n      error: (error) => {\n        this.apiResponse = error.error;\n        this.toastr.warning(this.apiResponse.message, '', {\n          progressBar: true,\n        });\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}