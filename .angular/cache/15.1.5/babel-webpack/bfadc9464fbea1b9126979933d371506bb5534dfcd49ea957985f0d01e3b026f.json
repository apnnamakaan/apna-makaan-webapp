{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction InputComponentComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.lable);\n  }\n}\nexport class InputComponentComponent {\n  constructor() {\n    this.isDisable = false;\n    this.inputype = 'text';\n    this.placeholder = 'placeholder name';\n    this.lable = '';\n    this.getValueEvent = new EventEmitter();\n  }\n  onchange(s) {\n    this.getValueEvent.emit(s.value);\n  }\n}\nInputComponentComponent.ɵfac = function InputComponentComponent_Factory(t) {\n  return new (t || InputComponentComponent)();\n};\nInputComponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputComponentComponent,\n  selectors: [[\"app-input-component\"]],\n  inputs: {\n    isDisable: \"isDisable\",\n    inputype: \"inputype\",\n    placeholder: \"placeholder\",\n    lable: \"lable\"\n  },\n  outputs: {\n    getValueEvent: \"getValueEvent\"\n  },\n  decls: 4,\n  vars: 4,\n  consts: [[1, \"mb-3\", \"xl:w-full\"], [4, \"ngIf\"], [\"id\", \"exampleText0\", 1, \"form-control\", \"block\", \"px-3\", \"w-full\", \"py-1.5\", \"text-base\", \"font-normal\", \"text-gray-700\", \"bg-white\", \"bg-clip-padding\", \"border\", \"border-solid\", \"border-gray-300\", \"rounded\", \"transition\", \"ease-in-out\", \"m-0\", \"focus:text-gray-700\", \"focus:bg-white\", \"focus:border-blue-500\", \"focus:outline-none\", 3, \"disabled\", \"type\", \"placeholder\", \"change\"], [\"value\", \"\"], [\"for\", \"exampleText0\", 1, \"form-label\", \"inline-block\", \"mb-1\", \"text-gray-700\"]],\n  template: function InputComponentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, InputComponentComponent_div_1_Template, 3, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"change\", function InputComponentComponent_Template_input_change_2_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r1 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onchange(_r1));\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.lable != \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.type);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholder);\n      i0.ɵɵproperty(\"disabled\", ctx.isDisable);\n    }\n  },\n  dependencies: [i1.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;ICCpEC,2BAAuB;IACwDA,YAAS;IAAAA,iBAAQ;;;;IAAjBA,eAAS;IAATA,kCAAS;;;ADK1F,OAAM,MAAOC,uBAAuB;EALpCC;IAMW,cAAS,GAAQ,KAAK;IACtB,aAAQ,GAAQ,MAAM;IACtB,gBAAW,GAAW,kBAAkB;IACxC,UAAK,GAAW,EAAE;IAEjB,kBAAa,GAAG,IAAIH,YAAY,EAAU;;EAEpDI,QAAQ,CAACC,CAAM;IACb,IAAI,CAACC,aAAa,CAACC,IAAI,CAACF,CAAC,CAACG,KAAK,CAAC;EAClC;;AAVWN,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAO;EAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EAAAC;IAAAT;EAAA;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;;MCPpClB,8BAA4B;MAC1BA,wEAEM;MACNA,mCAmBoB;MAnBkBA;QAAAA;QAAA;QAAA,OAAUA,gCAAe;MAAA,EAAC;MAAhEA,iBAmBoB;;;MAtBdA,eAAe;MAAfA,sCAAe;MAG4CA,eAAa;MAAbA,0CAAa;MAgBxCA,wDAA2B;MAhB1DA,wCAAsB","names":["EventEmitter","i0","InputComponentComponent","constructor","onchange","s","getValueEvent","emit","value","selectors","inputs","isDisable","inputype","placeholder","lable","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\input-component\\input-component.component.ts","C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\input-component\\input-component.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-input-component',\n  templateUrl: './input-component.component.html',\n  styles: [],\n})\nexport class InputComponentComponent {\n  @Input() isDisable: any = false;\n  @Input() inputype: any = 'text';\n  @Input() placeholder: String = 'placeholder name';\n  @Input() lable: String = '';\n\n  @Output() getValueEvent = new EventEmitter<String>();\n\n  onchange(s: any) {\n    this.getValueEvent.emit(s.value);\n  }\n}\n","<div class=\"mb-3 xl:w-full\">\n  <div *ngIf=\"lable!=''\">\n    <label for=\"exampleText0\" class=\"form-label inline-block mb-1 text-gray-700\">{{lable}}</label>\n  </div>\n  <input [disabled]=\"isDisable\"  #value (change)=\"onchange(value)\" type={{type}} class=\"\n                      form-control\n                      block\n                      px-3\n                      w-full\n                      py-1.5\n                      text-base\n                      font-normal\n                      text-gray-700\n                      bg-white bg-clip-padding\n                      border border-solid border-gray-300\n                      rounded\n                      transition\n                      ease-in-out\n                      m-0\n                      focus:text-gray-700 focus:bg-white focus:border-blue-500 focus:outline-none\n                    \" id=\"exampleText0\" placeholder={{placeholder}} \n                    \n                    \n                    />\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}