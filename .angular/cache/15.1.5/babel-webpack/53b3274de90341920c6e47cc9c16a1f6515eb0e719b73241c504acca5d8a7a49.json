{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { GlobalData } from '../../shared/utils/data';\nlet SellComponent = class SellComponent {\n  constructor(authService, propertyService, router, UserService) {\n    this.authService = authService;\n    this.propertyService = propertyService;\n    this.router = router;\n    this.UserService = UserService;\n    this.data = GlobalData;\n    this.property = {\n      id: 0,\n      name: '',\n      area: 0,\n      bed: 0,\n      bath: 0,\n      garage: 0,\n      city: '',\n      price: 0,\n      user: '',\n      active: true,\n      image: ''\n    };\n    this.authService.checkIsLogedIn();\n  }\n  // Setter for body\n  setName(value) {\n    this.property.name = value;\n  }\n  setCity(value) {\n    this.property.city = value;\n  }\n  setBed(value) {\n    this.property.bed = value;\n  }\n  setBath(value) {\n    this.property.bath = value;\n  }\n  setGarage(value) {\n    this.property.garage = value;\n  }\n  setArea(value) {\n    this.property.area = value;\n  }\n  setPrice(value) {\n    this.property.price = value;\n  }\n  setImage(value) {\n    this.property.image = value;\n  }\n  setFile(value) {\n    this.imageFile = value;\n  }\n  reloadCurrentRoute() {\n    let currentUrl = this.router.url;\n    this.router.navigateByUrl('/', {\n      skipLocationChange: true\n    }).then(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n  uploadButtonClick() {\n    this.propertyService.uploadProperty(this.property, this.imageFile);\n    this.reloadCurrentRoute();\n  }\n};\nSellComponent = __decorate([Component({\n  selector: 'app-sell',\n  templateUrl: './sell.component.html',\n  styles: []\n})], SellComponent);\nexport { SellComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,UAAU,QAAQ,yBAAyB;AAS7C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAmBxBC,YACUC,WAAwB,EACxBC,eAAgC,EAChCC,MAAc,EACdC,WAAW;IAHX,gBAAW,GAAXH,WAAW;IACX,oBAAe,GAAfC,eAAe;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAtBrB,SAAI,GAAQN,UAAU;IAIf,aAAQ,GAAa;MAC1BO,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;KACR;IAQC,IAAI,CAACd,WAAW,CAACe,cAAc,EAAE;EACnC;EAEA;EACAC,OAAO,CAACC,KAAU;IAChB,IAAI,CAACC,QAAQ,CAACb,IAAI,GAAGY,KAAK;EAC5B;EACAE,OAAO,CAACF,KAAU;IAChB,IAAI,CAACC,QAAQ,CAACR,IAAI,GAAGO,KAAK;EAC5B;EACAG,MAAM,CAACH,KAAU;IACf,IAAI,CAACC,QAAQ,CAACX,GAAG,GAAGU,KAAK;EAC3B;EACAI,OAAO,CAACJ,KAAU;IAChB,IAAI,CAACC,QAAQ,CAACV,IAAI,GAAGS,KAAK;EAC5B;EACAK,SAAS,CAACL,KAAU;IAClB,IAAI,CAACC,QAAQ,CAACT,MAAM,GAAGQ,KAAK;EAC9B;EACAM,OAAO,CAACN,KAAU;IAChB,IAAI,CAACC,QAAQ,CAACZ,IAAI,GAAGW,KAAK;EAC5B;EACAO,QAAQ,CAACP,KAAU;IACjB,IAAI,CAACC,QAAQ,CAACP,KAAK,GAAGM,KAAK;EAC7B;EACAQ,QAAQ,CAACR,KAAa;IACpB,IAAI,CAACC,QAAQ,CAACJ,KAAK,GAAGG,KAAK;EAC7B;EAEAS,OAAO,CAACT,KAAU;IAChB,IAAI,CAACU,SAAS,GAAGV,KAAK;EACxB;EAEAW,kBAAkB;IAChB,IAAIC,UAAU,GAAG,IAAI,CAAC3B,MAAM,CAAC4B,GAAG;IAChC,IAAI,CAAC5B,MAAM,CAAC6B,aAAa,CAAC,GAAG,EAAE;MAAEC,kBAAkB,EAAE;IAAI,CAAE,CAAC,CAACC,IAAI,CAAC,MAAK;MACrE,IAAI,CAAC/B,MAAM,CAACgC,QAAQ,CAAC,CAACL,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAM,iBAAiB;IACf,IAAI,CAAClC,eAAe,CAACmC,cAAc,CAAC,IAAI,CAAClB,QAAQ,EAAE,IAAI,CAACS,SAAS,CAAC;IAClE,IAAI,CAACC,kBAAkB,EAAE;EAC3B;CACD;AArEY9B,aAAa,eALzBF,SAAS,CAAC;EACTyC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,MAAM,EAAE;CACT,CAAC,GACWzC,aAAa,CAqEzB;SArEYA,aAAa","names":["Component","GlobalData","SellComponent","constructor","authService","propertyService","router","UserService","id","name","area","bed","bath","garage","city","price","user","active","image","checkIsLogedIn","setName","value","property","setCity","setBed","setBath","setGarage","setArea","setPrice","setImage","setFile","imageFile","reloadCurrentRoute","currentUrl","url","navigateByUrl","skipLocationChange","then","navigate","uploadButtonClick","uploadProperty","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\pages\\sell\\sell.component.ts"],"sourcesContent":["import { PropertyService } from './../../shared/services/property.service';\nimport { Component } from '@angular/core';\nimport { AuthService } from './../../shared/services/auth.service';\nimport { GlobalData } from '../../shared/utils/data';\nimport { property } from 'src/app/shared/models/property';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sell',\n  templateUrl: './sell.component.html',\n  styles: [],\n})\nexport class SellComponent {\n  data: any = GlobalData;\n\n  public imageFile: any;\n\n  public property: property = {\n    id: 0,\n    name: '',\n    area: 0,\n    bed: 0,\n    bath: 0,\n    garage: 0,\n    city: '',\n    price: 0,\n    user: '',\n    active: true,\n    image: '',\n  };\n\n  constructor(\n    private authService: AuthService,\n    private propertyService: PropertyService,\n    private router: Router,\n    private UserService\n  ) {\n    this.authService.checkIsLogedIn();\n  }\n\n  // Setter for body\n  setName(value: any) {\n    this.property.name = value;\n  }\n  setCity(value: any) {\n    this.property.city = value;\n  }\n  setBed(value: any) {\n    this.property.bed = value;\n  }\n  setBath(value: any) {\n    this.property.bath = value;\n  }\n  setGarage(value: any) {\n    this.property.garage = value;\n  }\n  setArea(value: any) {\n    this.property.area = value;\n  }\n  setPrice(value: any) {\n    this.property.price = value;\n  }\n  setImage(value: string) {\n    this.property.image = value;\n  }\n\n  setFile(value: any) {\n    this.imageFile = value;\n  }\n\n  reloadCurrentRoute() {\n    let currentUrl = this.router.url;\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n\n  uploadButtonClick() {\n    this.propertyService.uploadProperty(this.property, this.imageFile);\n    this.reloadCurrentRoute();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}