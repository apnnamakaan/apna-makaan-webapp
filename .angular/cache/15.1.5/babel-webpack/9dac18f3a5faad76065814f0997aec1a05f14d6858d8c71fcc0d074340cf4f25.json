{"ast":null,"code":"import { Apis } from './../../utils/apis';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/error.service\";\nexport class FileInputComponent {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.imageSrc = '';\n    this.imageUrl = '';\n    this.getFileEvent = new EventEmitter();\n    this.imageRes = {\n      status: '',\n      message: '',\n      image: ''\n    };\n  }\n  uploadImage(image) {\n    var formData = new FormData();\n    formData.append('file', image);\n    this.http.post(Apis.image.uploadImage, formData).subscribe({\n      next: res => {\n        this.imageRes = res;\n        this.imageUrl = this.imageRes.image;\n      },\n      error: error => {\n        this.errorService.handelError(error);\n      }\n    });\n  }\n  readURL(event) {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n      this.uploadImage(this.file);\n      const reader = new FileReader();\n      reader.onload = e => this.imageSrc = reader.result;\n      reader.readAsDataURL(this.file);\n    }\n  }\n}\nFileInputComponent.ɵfac = function FileInputComponent_Factory(t) {\n  return new (t || FileInputComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ErrorService));\n};\nFileInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileInputComponent,\n  selectors: [[\"app-file-input\"]],\n  inputs: {\n    file: \"file\"\n  },\n  outputs: {\n    getFileEvent: \"getFileEvent\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"mb-3\", \"xl:w-full\", \"border\"], [\"type\", \"file\", 1, \"block\", \"w-full\", \"h-48\", \"px-3\", \"py-1.5\", \"text-base\", \"transition\", \"ease-in-out\", \"overflow-hidden\", \"text-white\", \"font-bold\", \"bg-cover\", 3, \"change\"], [\"name\", \"dd\", \"type\", \"file\", \"accept\", \"image/*\", 1, \"w-full\", \"form-control\", \"h-full\"]],\n  template: function FileInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵlistener(\"change\", function FileInputComponent_Template_div_change_1_listener($event) {\n        return ctx.readURL($event);\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMapInterpolate1(\"background-image: url(\", ctx.imageSrc, \");\");\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,QAAQ,oBAAoB;AAEzC,SAAmCC,YAAY,QAAQ,eAAe;;;;AAQtE,OAAM,MAAOC,kBAAkB;EAQ7BC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAPnD,aAAQ,GAAQ,EAAE;IAGlB,aAAQ,GAAW,EAAE;IAElB,iBAAY,GAAG,IAAIJ,YAAY,EAAO;IAIzC,aAAQ,GAAQ;MACrBK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;KACR;EAN0E;EAQ3EC,WAAW,CAACD,KAAU;IACpB,IAAIE,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,KAAK,CAAC;IAC9B,IAAI,CAACJ,IAAI,CAACS,IAAI,CAACb,IAAI,CAACQ,KAAK,CAACC,WAAW,EAAEC,QAAQ,CAAC,CAACI,SAAS,CAAC;MACzDC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,QAAQ,GAAGD,GAAG;QACnB,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACD,QAAQ,CAACT,KAAK;MAErC,CAAC;MACDW,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACd,YAAY,CAACe,WAAW,CAACD,KAAK,CAAC;MACtC;KACD,CAAC;EACJ;EAEAE,OAAO,CAACC,KAAU;IAChB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C,IAAI,CAACC,IAAI,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACjC,IAAI,CAACf,WAAW,CAAC,IAAI,CAACgB,IAAI,CAAC;MAE3B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAM,IAAI,CAACC,QAAQ,GAAGJ,MAAM,CAACK,MAAO;MACtDL,MAAM,CAACM,aAAa,CAAC,IAAI,CAACP,IAAI,CAAC;;EAEnC;;AAxCWvB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA+B;EAAAC;IAAAT;EAAA;EAAAU;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,8BAAmC;MACdA;QAAA,OAAYC,mBAAe;MAAA,EAAC;MAazCD,2BAAiF;MACrFA,iBAAM;;;MAFIA,eAA4C;MAA5CA,uEAA4C","names":["Apis","EventEmitter","FileInputComponent","constructor","http","errorService","status","message","image","uploadImage","formData","FormData","append","post","subscribe","next","res","imageRes","imageUrl","error","handelError","readURL","event","target","files","file","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","selectors","inputs","outputs","getFileEvent","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\file-input\\file-input.component.ts","C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\file-input\\file-input.component.html"],"sourcesContent":["import { Apis } from './../../utils/apis';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ErrorService } from '../../services/error.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: [],\n})\nexport class FileInputComponent {\n  public imageSrc: any = '';\n  @Input() file: any;\n\n  public imageUrl: string = '';\n\n  @Output() getFileEvent = new EventEmitter<any>();\n\n  constructor(private http: HttpClient, private errorService: ErrorService) {}\n\n  public imageRes: any = {\n    status: '',\n    message: '',\n    image: '',\n  };\n\n  uploadImage(image: any) {\n    var formData = new FormData();\n    formData.append('file', image);\n    this.http.post(Apis.image.uploadImage, formData).subscribe({\n      next: (res) => {\n        this.imageRes = res;\n        this.imageUrl = this.imageRes.image;\n        \n      },\n      error: (error) => {\n        this.errorService.handelError(error);\n      },\n    });\n  }\n\n  readURL(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n      this.uploadImage(this.file);\n\n      const reader = new FileReader();\n      reader.onload = (e) => (this.imageSrc = reader.result);\n      reader.readAsDataURL(this.file);\n    }\n  }\n}\n","<div class=\"mb-3 xl:w-full border\">\n    <div type=\"file\" (change)=\" readURL($event);\" class=\" \n    block\n    w-full\n    h-48\n    px-3\n    py-1.5\n    text-base\n    transition\n    ease-in-out\n    overflow-hidden\n    text-white\n    font-bold\n    bg-cover\" style=\"background-image: url({{imageSrc}});\">\n        <input name=\"dd\" class=\"w-full form-control h-full\" type=\"file\" accept=\"image/*\">\n    </div>\n\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}