{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { GlobalData } from '../../shared/utils/data';\nlet DiscoverComponent = class DiscoverComponent {\n  constructor(authService, activatedroute, router, propertyService, errorService) {\n    this.authService = authService;\n    this.activatedroute = activatedroute;\n    this.router = router;\n    this.propertyService = propertyService;\n    this.errorService = errorService;\n    this.properties = [];\n    this.data = GlobalData;\n    this.filterData = {\n      bed: 0,\n      garage: 0,\n      bath: 0,\n      city: '',\n      min: 0,\n      max: 0\n    };\n    this.authService.checkIsLogedIn();\n  }\n  ngOnInit() {\n    this.activatedroute.queryParams.subscribe(params => {\n      if (!this.errorService.handelEmptyFilds(this.filterData, false)) {\n        this.filterData = params;\n      } else {\n        this.getProperties();\n      }\n    });\n  }\n  setCity(value) {\n    this.filterData.city = value;\n  }\n  setBed(value) {\n    this.filterData.bed = value;\n  }\n  setBath(value) {\n    this.filterData.bath = value;\n  }\n  setGarage(value) {\n    this.filterData.garage = value;\n  }\n  setMaxPrice(value) {\n    this.filterData.max = value;\n  }\n  setMinPrice(value) {\n    this.filterData.min = value;\n  }\n  getProperties() {\n    this.propertyService.getProperties().subscribe({\n      next: res => this.properties = res,\n      error: error => this.errorService.handelError(error)\n    });\n  }\n  getPropertiesByFilter(filter) {\n    this.propertyService.getPropertiesByFilter(filter).subscribe({\n      next: res => this.properties = res,\n      error: error => this.errorService.handelError(error)\n    });\n  }\n  searchButtonPress() {\n    if (!this.errorService.handelEmptyFilds(this.filterData)) {\n      this.getPropertiesByFilter(this.filterData);\n    }\n    this.router.navigateByUrl(`?city=${this.filterData.city}&bed=${this.filterData.bed}&bath=${this.filterData.bath}&garage=${this.filterData.garage}&min=${this.filterData.min}&max=${this.filterData.max}`);\n  }\n};\nDiscoverComponent = __decorate([Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styles: []\n})], DiscoverComponent);\nexport { DiscoverComponent };","map":{"version":3,"mappings":"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","names":["Component","GlobalData","DiscoverComponent","constructor","authService","activatedroute","router","propertyService","errorService","bed","garage","bath","city","min","max","checkIsLogedIn","ngOnInit","queryParams","subscribe","params","handelEmptyFilds","filterData","getProperties","setCity","value","setBed","setBath","setGarage","setMaxPrice","setMinPrice","next","res","properties","error","handelError","getPropertiesByFilter","filter","searchButtonPress","navigateByUrl","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\pages\\discover\\discover.component.ts"],"sourcesContent":["import { PropertyService } from './../../shared/services/property.service';\nimport { AuthService } from './../../shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GlobalData } from '../../shared/utils/data';\nimport { property } from 'src/app/shared/models/property';\nimport { ErrorService } from 'src/app/shared/services/helper.service';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styles: [],\n})\nexport class DiscoverComponent implements OnInit {\n  public properties: Array<property> = [];\n\n  public data: any = GlobalData;\n\n  public filterData: any = {\n    bed: 0,\n    garage: 0,\n    bath: 0,\n    city: '',\n    min: 0,\n    max: 0,\n  };\n\n  constructor(\n    private authService: AuthService,\n    private activatedroute: ActivatedRoute,\n    private router: Router,\n    private propertyService: PropertyService,\n    private errorService: ErrorService\n  ) {\n    this.authService.checkIsLogedIn();\n  }\n\n  ngOnInit(): void {\n    this.activatedroute.queryParams.subscribe((params) => {\n      if (!this.errorService.handelEmptyFilds(this.filterData, false)) {\n        this.filterData = params;\n      } else {\n        this.getProperties();\n      }\n    });\n  }\n\n  setCity(value: any) {\n    this.filterData.city = value as string;\n  }\n  setBed(value: any) {\n    this.filterData.bed = value as number;\n  }\n  setBath(value: any) {\n    this.filterData.bath = value as number;\n  }\n  setGarage(value: any) {\n    this.filterData.garage = value as number;\n  }\n  setMaxPrice(value: any) {\n    this.filterData.max = value as number;\n  }\n  setMinPrice(value: any) {\n    this.filterData.min = value as number;\n  }\n\n  getProperties() {\n    this.propertyService.getProperties().subscribe({\n      next: (res: Array<property>) => (this.properties = res),\n      error: (error: any) => this.errorService.handelError(error),\n    });\n  }\n\n  getPropertiesByFilter(filter: any) {\n    this.propertyService.getPropertiesByFilter(filter).subscribe({\n      next: (res: Array<property>) => (this.properties = res),\n      error: (error: any) => this.errorService.handelError(error),\n    });\n  }\n\n  searchButtonPress() {\n    if (!this.errorService.handelEmptyFilds(this.filterData)) {\n      this.getPropertiesByFilter(this.filterData);\n    }\n    this.router.navigateByUrl(\n      `?city=${this.filterData.city}&bed=${this.filterData.bed}&bath=${this.filterData.bath}&garage=${this.filterData.garage}&min=${this.filterData.min}&max=${this.filterData.max}`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}