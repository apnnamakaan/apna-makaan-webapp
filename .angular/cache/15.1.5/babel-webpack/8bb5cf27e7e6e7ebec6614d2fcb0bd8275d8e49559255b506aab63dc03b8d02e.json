{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Apis } from '../utils/apis';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class MlService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.predictRes = {\n      \"estimate\": 24378.0\n    };\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      authorization: this.getToken()\n    });\n  }\n  getToken() {\n    return localStorage.getItem('token') || '';\n  }\n  predictPrice(data) {\n    var uri = `?city=${data.city}&area=${data.area}&bed=${data.bed}&bath=${data.bath}&garage=${data.garage}`;\n    console.log(Apis.ml.predictPrice + uri);\n    this.http.get(Apis.ml.predictPrice + uri, {\n      headers: this.headers\n    }).subscribe({\n      next: res => {\n        return res;\n      },\n      error: error => {\n        this.errorService.handelError(error);\n      }\n    });\n  }\n}\nMlService.ɵfac = function MlService_Factory(t) {\n  return new (t || MlService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nMlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MlService,\n  factory: MlService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAoB,sBAAsB;AAE9D,SAASC,IAAI,QAAQ,eAAe;;;;AAMpC,OAAM,MAAOC,SAAS;EAWpBC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IATlD,eAAU,GAAQ;MACxB,UAAU,EAAE;KACb;IAEM,YAAO,GAAQ,IAAIL,WAAW,CAAC;MACpC,cAAc,EAAE,iCAAiC;MACjDM,aAAa,EAAE,IAAI,CAACC,QAAQ;KAC7B,CAAC;EAEyE;EAE3EA,QAAQ;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAC5C;EAEAC,YAAY,CAACC,IAAS;IACpB,IAAIC,GAAG,GAAG,SAASD,IAAI,CAACE,IAAI,SAASF,IAAI,CAACG,IAAI,QAAQH,IAAI,CAACI,GAAG,SAASJ,IAAI,CAACK,IAAI,WAAWL,IAAI,CAACM,MAAM,EAAE;IACxGC,OAAO,CAACC,GAAG,CAAClB,IAAI,CAACmB,EAAE,CAACV,YAAY,GAAGE,GAAG,CAAC;IACvC,IAAI,CAACR,IAAI,CACNiB,GAAG,CAACpB,IAAI,CAACmB,EAAE,CAACV,YAAY,GAAGE,GAAG,EAAE;MAC/BU,OAAO,EAAE,IAAI,CAACA;KACf,CAAC,CACDC,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZ,OAAOA,GAAG;MACZ,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACrB,YAAY,CAACsB,WAAW,CAACD,KAAK,CAAC;MACtC;KACD,CAAC;EACN;;AAhCWxB,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAA0B,SAAT1B,SAAS;EAAA2B,YAFR;AAAM","names":["HttpHeaders","Apis","MlService","constructor","http","errorService","authorization","getToken","localStorage","getItem","predictPrice","data","uri","city","area","bed","bath","garage","console","log","ml","get","headers","subscribe","next","res","error","handelError","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\ml.service.ts"],"sourcesContent":["import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Apis } from '../utils/apis';\nimport { ErrorService } from './error.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MlService {\n  \n  private predictRes : any ={\n    \"estimate\": 24378.0\n  }\n\n  public headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    authorization: this.getToken(),\n  });\n\n  constructor(private http: HttpClient, private errorService: ErrorService) {}\n\n  getToken() {\n    return localStorage.getItem('token') || '';\n  }\n\n  predictPrice(data: any): any {\n    var uri = `?city=${data.city}&area=${data.area}&bed=${data.bed}&bath=${data.bath}&garage=${data.garage}`;\n    console.log(Apis.ml.predictPrice + uri);\n    this.http\n      .get(Apis.ml.predictPrice + uri, {\n        headers: this.headers,\n      })\n      .subscribe({\n        next: (res) => {\n          return res;\n        },\n        error: (error) => {\n          this.errorService.handelError(error);\n        },\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}