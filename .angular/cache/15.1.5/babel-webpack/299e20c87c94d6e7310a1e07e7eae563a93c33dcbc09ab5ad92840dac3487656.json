{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport class DatePipe {\n  transform(value, ...args) {\n    var today = new Date();\n    var diffDays = new Date(value).getTime() - new Date(today).getTime();\n    console.log(diffDays / 24 * 60 * 60 * 1000);\n    return value;\n  }\n  timeAgo(dateParam) {\n    if (!dateParam) {\n      return null;\n    }\n  }\n}\nDatePipe.ɵfac = function DatePipe_Factory(t) {\n  return new (t || DatePipe)();\n};\nDatePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"date\",\n  type: DatePipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAEA,MAAMA,WAAW,GAAG,CAClB,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;AAOD,OAAM,MAAOC,QAAQ;EACnBC,SAAS,CAACC,KAAU,EAAE,GAAGC,IAAe;IACtC,IAAIC,KAAK,GAAS,IAAIC,IAAI,EAAE;IAE5B,IAAIC,QAAQ,GAAG,IAAID,IAAI,CAACH,KAAK,CAAC,CAACK,OAAO,EAAE,GAAG,IAAIF,IAAI,CAACD,KAAK,CAAC,CAACG,OAAO,EAAE;IACpEC,OAAO,CAACC,GAAG,CAAEH,QAAQ,GAAG,EAAE,GAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC7C,OAAOJ,KAAK;EACd;EAEAQ,OAAO,CAACC,SAAa;IACnB,IAAI,CAACA,SAAS,EAAE;MACd,OAAO,IAAI;;EAGjB;;AAdaX,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;;QAARA,QAAQ;EAAAY;AAAA","names":["MONTH_NAMES","DatePipe","transform","value","args","today","Date","diffDays","getTime","console","log","timeAgo","dateParam","pure"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\pipes\\date.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nconst MONTH_NAMES = [\n  'January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'\n];\n\n\n\n@Pipe({\n  name: 'date',\n})\nexport class DatePipe implements PipeTransform {\n  transform(value: any, ...args: unknown[]): unknown {\n    var today: Date = new Date();\n\n    var diffDays = new Date(value).getTime() - new Date(today).getTime();\n    console.log((diffDays / 24) * 60 * 60 * 1000);\n    return value;\n  }\n  \n  timeAgo(dateParam:any) {\n    if (!dateParam) {\n      return null;\n    }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}