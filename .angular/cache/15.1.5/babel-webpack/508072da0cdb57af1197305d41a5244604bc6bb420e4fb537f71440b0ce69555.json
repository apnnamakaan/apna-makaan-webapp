{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { GlobalData } from '../../shared/utils/data';\nlet DiscoverComponent = class DiscoverComponent {\n  constructor(authService, activatedroute, router, propertyService, helperService) {\n    this.authService = authService;\n    this.activatedroute = activatedroute;\n    this.router = router;\n    this.propertyService = propertyService;\n    this.helperService = helperService;\n    this.properties = [];\n    this.data = GlobalData;\n    this.filterData = {\n      bed: 0,\n      garage: 0,\n      bath: 0,\n      city: '',\n      min: 0,\n      max: 0\n    };\n    this.authService.checkIsLogedIn();\n  }\n  ngOnInit() {\n    // this.activatedroute.queryParams.subscribe((params) => {\n    //   if (!this.helperService.handelEmptyFilds(params, false)) {\n    //     this.getPropertiesByFilter(params);\n    //   } else {\n    //     this.getProperties();\n    //   }\n    // });\n    this.getProperties();\n  }\n  setCity(value) {\n    this.filterData.city = value;\n  }\n  setBed(value) {\n    this.filterData.bed = value;\n  }\n  setBath(value) {\n    this.filterData.bath = value;\n  }\n  setGarage(value) {\n    this.filterData.garage = value;\n  }\n  setMaxPrice(value) {\n    this.filterData.max = value;\n  }\n  setMinPrice(value) {\n    console.log('sertt + ' + value);\n    this.filterData.min = value;\n  }\n  getProperties() {\n    this.propertyService.getProperties().subscribe({\n      next: res => this.properties = res.sort((b, a) => {\n        return +new Date(a.createdAt) - +new Date(b.createdAt);\n      }),\n      error: error => this.helperService.handelError(error)\n    });\n  }\n  getPropertiesByFilter(filter) {\n    if (this.helperService.handelEmptyFilds(this.filterData)) return;\n    this.propertyService.getPropertiesByFilter(filter).subscribe({\n      next: res => this.properties = res.sort((b, a) => {\n        return +new Date(a.createdAt) - +new Date(b.createdAt);\n      }),\n      error: error => this.helperService.handelError(error)\n    });\n  }\n  searchButtonPress() {\n    this.getPropertiesByFilter(this.filterData);\n  }\n};\nDiscoverComponent = __decorate([Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styles: []\n})], DiscoverComponent);\nexport { DiscoverComponent };","map":{"version":3,"mappings":";AAGA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,UAAU,QAAQ,yBAAyB;AAQ7C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAc5BC,YACUC,WAAwB,EACxBC,cAA8B,EAC9BC,MAAc,EACdC,eAAgC,EAChCC,aAA4B;IAJ5B,gBAAW,GAAXJ,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IACN,oBAAe,GAAfC,eAAe;IACf,kBAAa,GAAbC,aAAa;IAlBhB,eAAU,GAAoB,EAAE;IAEhC,SAAI,GAAQP,UAAU;IAEtB,eAAU,GAAQ;MACvBQ,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE;KACN;IASC,IAAI,CAACV,WAAW,CAACW,cAAc,EAAE;EACnC;EAEAC,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,OAAO,CAACC,KAAU;IAChB,IAAI,CAACC,UAAU,CAACR,IAAI,GAAGO,KAAe;EACxC;EACAE,MAAM,CAACF,KAAU;IACf,IAAI,CAACC,UAAU,CAACX,GAAG,GAAGU,KAAe;EACvC;EACAG,OAAO,CAACH,KAAU;IAChB,IAAI,CAACC,UAAU,CAACT,IAAI,GAAGQ,KAAe;EACxC;EACAI,SAAS,CAACJ,KAAU;IAClB,IAAI,CAACC,UAAU,CAACV,MAAM,GAAGS,KAAe;EAC1C;EACAK,WAAW,CAACL,KAAU;IACpB,IAAI,CAACC,UAAU,CAACN,GAAG,GAAGK,KAAe;EACvC;EACAM,WAAW,CAACN,KAAU;IACpBO,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGR,KAAK,CAAC;IAC/B,IAAI,CAACC,UAAU,CAACP,GAAG,GAAGM,KAAe;EACvC;EAEAF,aAAa;IACX,IAAI,CAACV,eAAe,CAACU,aAAa,EAAE,CAACW,SAAS,CAAC;MAC7CC,IAAI,EAAGC,GAAoB,IACzB,IAAI,CAACC,UAAU,GAAGD,GAAG,CAACE,IAAI,CAAC,CAACC,CAAW,EAAEC,CAAW,KAAI;QACtD,OAAO,CAAC,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,CAAC,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC;MACxD,CAAC,CAAC;MACJC,KAAK,EAAGA,KAAU,IAAK,IAAI,CAAC7B,aAAa,CAAC8B,WAAW,CAACD,KAAK;KAC5D,CAAC;EACJ;EAEAE,qBAAqB,CAACC,MAAW;IAC/B,IAAI,IAAI,CAAChC,aAAa,CAACiC,gBAAgB,CAAC,IAAI,CAACrB,UAAU,CAAC,EAAE;IAC1D,IAAI,CAACb,eAAe,CAACgC,qBAAqB,CAACC,MAAM,CAAC,CAACZ,SAAS,CAAC;MAC3DC,IAAI,EAAGC,GAAoB,IAAK,IAAI,CAACC,UAAU,GAAGD,GAAG,CAACE,IAAI,CAAC,CAACC,CAAW,EAAEC,CAAW,KAAI;QACtF,OAAO,CAAC,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,CAAC,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC;MACxD,CAAC,CAAC;MACFC,KAAK,EAAGA,KAAU,IAAK,IAAI,CAAC7B,aAAa,CAAC8B,WAAW,CAACD,KAAK;KAC5D,CAAC;EACJ;EAEAK,iBAAiB;IACf,IAAI,CAACH,qBAAqB,CAAC,IAAI,CAACnB,UAAU,CAAC;EAC7C;CACD;AA/EYlB,iBAAiB,eAL7BF,SAAS,CAAC;EACT2C,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,MAAM,EAAE;CACT,CAAC,GACW3C,iBAAiB,CA+E7B;SA/EYA,iBAAiB","names":["Component","GlobalData","DiscoverComponent","constructor","authService","activatedroute","router","propertyService","helperService","bed","garage","bath","city","min","max","checkIsLogedIn","ngOnInit","getProperties","setCity","value","filterData","setBed","setBath","setGarage","setMaxPrice","setMinPrice","console","log","subscribe","next","res","properties","sort","b","a","Date","createdAt","error","handelError","getPropertiesByFilter","filter","handelEmptyFilds","searchButtonPress","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\pages\\discover\\discover.component.ts"],"sourcesContent":["import { HelperService } from './../../shared/services/helper.service';\nimport { PropertyService } from './../../shared/services/property.service';\nimport { AuthService } from './../../shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GlobalData } from '../../shared/utils/data';\nimport { property } from 'src/app/shared/models/property';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styles: [],\n})\nexport class DiscoverComponent implements OnInit {\n  public properties: Array<property> = [];\n\n  public data: any = GlobalData;\n\n  public filterData: any = {\n    bed: 0,\n    garage: 0,\n    bath: 0,\n    city: '',\n    min: 0,\n    max: 0,\n  };\n\n  constructor(\n    private authService: AuthService,\n    private activatedroute: ActivatedRoute,\n    private router: Router,\n    private propertyService: PropertyService,\n    private helperService: HelperService\n  ) {\n    this.authService.checkIsLogedIn();\n  }\n\n  ngOnInit(): void {\n    // this.activatedroute.queryParams.subscribe((params) => {\n    //   if (!this.helperService.handelEmptyFilds(params, false)) {\n    //     this.getPropertiesByFilter(params);\n    //   } else {\n    //     this.getProperties();\n    //   }\n    // });\n\n    this.getProperties();\n  }\n\n  setCity(value: any) {\n    this.filterData.city = value as string;\n  }\n  setBed(value: any) {\n    this.filterData.bed = value as number;\n  }\n  setBath(value: any) {\n    this.filterData.bath = value as number;\n  }\n  setGarage(value: any) {\n    this.filterData.garage = value as number;\n  }\n  setMaxPrice(value: any) {\n    this.filterData.max = value as number;\n  }\n  setMinPrice(value: any) {\n    console.log('sertt + ' + value);\n    this.filterData.min = value as number;\n  }\n\n  getProperties() {\n    this.propertyService.getProperties().subscribe({\n      next: (res: Array<property>) => \n        this.properties = res.sort((b: property, a: property) => {\n          return +new Date(a.createdAt) - +new Date(b.createdAt);\n        }),\n      error: (error: any) => this.helperService.handelError(error),\n    });\n  }\n\n  getPropertiesByFilter(filter: any) {\n    if (this.helperService.handelEmptyFilds(this.filterData)) return;\n    this.propertyService.getPropertiesByFilter(filter).subscribe({\n      next: (res: Array<property>) => this.properties = res.sort((b: property, a: property) => {\n        return +new Date(a.createdAt) - +new Date(b.createdAt);\n      }),\n      error: (error: any) => this.helperService.handelError(error),\n    });\n  }\n\n  searchButtonPress() {\n    this.getPropertiesByFilter(this.filterData);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}