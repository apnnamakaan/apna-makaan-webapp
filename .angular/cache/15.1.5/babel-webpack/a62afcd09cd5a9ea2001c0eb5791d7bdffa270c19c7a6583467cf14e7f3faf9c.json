{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { GlobalData } from '../../shared/utils/data';\nlet DiscoverComponent = class DiscoverComponent {\n  constructor(authService, activatedroute, router, propertyService) {\n    this.authService = authService;\n    this.activatedroute = activatedroute;\n    this.router = router;\n    this.propertyService = propertyService;\n    this.properties = [];\n    this.data = GlobalData;\n    this.filterData = {\n      bed: 1,\n      garage: 1,\n      bath: 1,\n      city: 'nabadwip',\n      min: 1,\n      max: 500000\n    };\n    this.filterUrl = '';\n    this.authService.checkIsLogedIn();\n  }\n  ngOnInit() {\n    this.activatedroute.queryParams.subscribe(params => {\n      this.setFilterUrl();\n      if (params == null) this.setFilter(params);\n      this.propertyService.getPropertiesByFilter(this.filterUrl);\n    });\n  }\n  ngDoCheck() {\n    this.properties = this.propertyService.properties;\n  }\n  setFilter(uriData) {\n    this.setCity(uriData.city);\n    this.setBed(uriData.bed);\n    this.setBath(uriData.bath);\n    this.setGarage(uriData.garage);\n    this.setMinPrice(uriData.min);\n    this.setMaxPrice(uriData.max);\n    this.setFilterUrl();\n  }\n  setFilterUrl() {\n    this.filterUrl = `?city=${this.filterData.city}&bed=${this.filterData.bed}&bath=${this.filterData.bath}&garage=${this.filterData.garage}&min=${this.filterData.min}&max=${this.filterData.max}`;\n  }\n  setCity(value) {\n    this.filterData.city = value;\n  }\n  setBed(value) {\n    this.filterData.bed = value;\n  }\n  setBath(value) {\n    this.filterData.bath = value;\n  }\n  setGarage(value) {\n    this.filterData.garage = value;\n  }\n  setMaxPrice(value) {\n    this.filterData.max = value;\n  }\n  setMinPrice(value) {\n    this.filterData.min = value;\n  }\n  searchButtonPress() {\n    this.setFilter(this.filterData);\n    this.propertyService.getPropertiesByFilter(this.filterUrl);\n    this.router.navigateByUrl(this.filterUrl);\n  }\n};\nDiscoverComponent = __decorate([Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styles: []\n})], DiscoverComponent);\nexport { DiscoverComponent };","map":{"version":3,"mappings":"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","names":["Component","GlobalData","DiscoverComponent","constructor","authService","activatedroute","router","propertyService","bed","garage","bath","city","min","max","checkIsLogedIn","ngOnInit","queryParams","subscribe","params","setFilterUrl","setFilter","getPropertiesByFilter","filterUrl","ngDoCheck","properties","uriData","setCity","setBed","setBath","setGarage","setMinPrice","setMaxPrice","filterData","value","searchButtonPress","navigateByUrl","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\pages\\discover\\discover.component.ts"],"sourcesContent":["import { PropertyService } from './../../shared/services/property.service';\nimport { AuthService } from './../../shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GlobalData } from '../../shared/utils/data';\nimport { property } from 'src/app/shared/models/property';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styles: [],\n})\nexport class DiscoverComponent implements OnInit {\n  public properties: Array<property> = [];\n\n  public data: any = GlobalData;\n\n  public filterData: any = {\n    bed: 1,\n    garage: 1,\n    bath: 1,\n    city: 'nabadwip',\n    min: 1,\n    max: 500000,\n  };\n\n  public filterUrl: string = '';\n\n  constructor(\n    private authService: AuthService,\n    private activatedroute: ActivatedRoute,\n    private router: Router,\n    private propertyService: PropertyService\n  ) {\n    this.authService.checkIsLogedIn();\n  }\n\n  ngOnInit(): void {\n    this.activatedroute.queryParams.subscribe((params) => {\n      this.setFilterUrl();\n      if(params == null)this.setFilter(params);\n      this.propertyService.getPropertiesByFilter(this.filterUrl);\n    });\n  }\n  ngDoCheck(): void {\n    this.properties = this.propertyService.properties;\n  }\n\n  setFilter(uriData: any) {\n    this.setCity(uriData.city);\n    this.setBed(uriData.bed);\n    this.setBath(uriData.bath);\n    this.setGarage(uriData.garage);\n    this.setMinPrice(uriData.min);\n    this.setMaxPrice(uriData.max);\n\n    this.setFilterUrl();\n  }\n\n  setFilterUrl() {\n    this.filterUrl = `?city=${this.filterData.city}&bed=${this.filterData.bed}&bath=${this.filterData.bath}&garage=${this.filterData.garage}&min=${this.filterData.min}&max=${this.filterData.max}`;\n  }\n\n  setCity(value: any) {\n    this.filterData.city = value;\n  }\n  setBed(value: any) {\n    this.filterData.bed = value;\n  }\n  setBath(value: any) {\n    this.filterData.bath = value;\n  }\n  setGarage(value: any) {\n    this.filterData.garage = value;\n  }\n  setMaxPrice(value: any) {\n    this.filterData.max = value;\n  }\n  setMinPrice(value: any) {\n    this.filterData.min = value;\n  }\n\n  searchButtonPress() {\n    this.setFilter(this.filterData);\n    this.propertyService.getPropertiesByFilter(this.filterUrl);\n    this.router.navigateByUrl(this.filterUrl);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}