{"ast":null,"code":"import { Apis } from '../utils/apis';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class UserService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    this.apiResponse = {\n      status: '',\n      message: ''\n    };\n    this.userData = {\n      name: '',\n      phone: 0,\n      email: '',\n      password: ''\n    };\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      authorization: this.getToken()\n    });\n    this.getUser();\n  }\n  getToken() {\n    return localStorage.getItem('token') || '';\n  }\n  getUser() {\n    this.http.get(Apis.user.getUserByToken, {\n      headers: this.headers\n    }).subscribe({\n      next: res => {\n        this.userData = res;\n      },\n      error: error => {\n        console.log(error.status);\n        if (error.status == 401) this.apiResponse = error.error;\n        this.toastr.warning(this.apiResponse.message, '', {\n          progressBar: true\n        });\n      }\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAAqBC,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,WAAW;EAkBtBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAjB7C,gBAAW,GAAQ;MACxBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;KACV;IAEM,aAAQ,GAAS;MACtBC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAEM,YAAO,GAAQ,IAAIV,WAAW,CAAC;MACpC,cAAc,EAAE,iCAAiC;MACjDW,aAAa,EAAE,IAAI,CAACC,QAAQ;KAC7B,CAAC;IAGA,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAD,QAAQ;IACN,OAAOE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAC5C;EAEAF,OAAO;IACL,IAAI,CAACV,IAAI,CACNa,GAAG,CAACjB,IAAI,CAACkB,IAAI,CAACC,cAAc,EAAE;MAC7BC,OAAO,EAAE,IAAI,CAACA;KACf,CAAC,CACDC,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,QAAQ,GAAGD,GAAW;MAC7B,CAAC;MACDE,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACnB,MAAM,CAAC;QAEzB,IAAGmB,KAAK,CAACnB,MAAM,IAAI,GAAG,EAEtB,IAAI,CAACsB,WAAW,GAAGH,KAAK,CAACA,KAAK;QAC9B,IAAI,CAACpB,MAAM,CAACwB,OAAO,CAAC,IAAI,CAACD,WAAW,CAACrB,OAAO,EAAE,EAAE,EAAE;UAChDuB,WAAW,EAAE;SACd,CAAC;MACJ;KACD,CAAC;EACN;;AA9CW5B,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA6B,SAAX7B,WAAW;EAAA8B,YAFV;AAAM","names":["Apis","HttpHeaders","UserService","constructor","http","toastr","status","message","name","phone","email","password","authorization","getToken","getUser","localStorage","getItem","get","user","getUserByToken","headers","subscribe","next","res","userData","error","console","log","apiResponse","warning","progressBar","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\user.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { Apis } from '../utils/apis';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { user } from './../models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  public apiResponse: any = {\n    status: '',\n    message: '',\n  };\n\n  public userData: user = {\n    name: '',\n    phone: 0,\n    email: '',\n    password: '',\n  };\n\n  public headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    authorization: this.getToken(),\n  });\n\n  constructor(private http: HttpClient, private toastr: ToastrService) {\n    this.getUser();\n  }\n\n  getToken() {\n    return localStorage.getItem('token') || '';\n  }\n\n  getUser() {\n    this.http\n      .get(Apis.user.getUserByToken, {\n        headers: this.headers,\n      })\n      .subscribe({\n        next: (res) => {\n          this.userData = res as user;\n        },\n        error: (error) => {\n          console.log(error.status);\n\n          if(error.status == 401) \n\n          this.apiResponse = error.error;\n          this.toastr.warning(this.apiResponse.message, '', {\n            progressBar: true,\n          });\n        },\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}