{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Apis } from '../utils/apis';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isLogedin = false;\n    this.token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQGdtYWlsLmNvbSIsImFkbWluIjp0cnVlLCJpYXQiOjE2NzcxMzAzOTksImV4cCI6MTcwODIzNDM5OX0.b9UyeCZyMzw1tzsbKy0T8-l-NmbemJOL-mOLBGn2-Ck';\n    this.bearerToken = 'bearer' + ' ' + this.token;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: this.bearerToken\n    });\n    this.url = 'http://localhost:5000/user/?email=admin@gmail.com';\n    this.loginBody = {\n      name: '',\n      phone: 0,\n      email: 'admin@gmail.com',\n      password: '1234'\n    };\n  }\n  login(userData) {\n    this.http.post(Apis.login, userData).pipe().subscribe(res => {\n      // response:string = res.toString();\n      if (res.toString() != 'null') {}\n      //localStorage.setItem('token', );\n      console.log(res);\n    }, error => console.log(error));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAEEA,WAAW,QAGN,sBAAsB;AAE7B,SAASC,IAAI,QAAQ,eAAe;;;AAOpC,OAAM,MAAOC,WAAW;EAetBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAdjB,cAAS,GAAY,KAAK;IAG1B,UAAK,GACV,sLAAsL;IACxL,gBAAW,GAAW,QAAQ,GAAG,GAAG,GAAG,IAAI,CAACC,KAAK;IAE1C,YAAO,GAAQ,IAAIL,WAAW,CAAC;MACpC,cAAc,EAAE,iCAAiC;MACjDM,aAAa,EAAE,IAAI,CAACC;KACrB,CAAC;IAEF,QAAG,GAAG,mDAAmD;IAIjD,cAAS,GAAS;MACxBC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE,iBAAiB;MACxBC,QAAQ,EAAE;KACX;EAPsC;EASvCC,KAAK,CAACC,QAAc;IAClB,IAAI,CAACT,IAAI,CACNU,IAAI,CAACb,IAAI,CAACW,KAAK,EAAEC,QAAQ,CAAC,CAC1BE,IAAI,EAAE,CACNC,SAAS,CACPC,GAAG,IAAI;MACN;MAEA,IAAIA,GAAG,CAACC,QAAQ,EAAE,IAAI,MAAM,EAAE;MAE9B;MACAC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAClB,CAAC,EACAI,KAAK,IAAKF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC,CAC9B;EACL;;AAvCWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["HttpHeaders","Apis","AuthService","constructor","http","token","Authorization","bearerToken","name","phone","email","password","login","userData","post","pipe","subscribe","res","toString","console","log","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\auth.service.ts"],"sourcesContent":["import { user } from './../models/user';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Apis } from '../utils/apis';\nimport { GlobalData } from '../utils/data';\nimport { catchError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public isLogedin: boolean = false;\n  public userData: any;\n\n  public token: string =\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQGdtYWlsLmNvbSIsImFkbWluIjp0cnVlLCJpYXQiOjE2NzcxMzAzOTksImV4cCI6MTcwODIzNDM5OX0.b9UyeCZyMzw1tzsbKy0T8-l-NmbemJOL-mOLBGn2-Ck';\n  bearerToken: string = 'bearer' + ' ' + this.token;\n\n  public headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    Authorization: this.bearerToken,\n  });\n\n  url = 'http://localhost:5000/user/?email=admin@gmail.com';\n\n  constructor(private http: HttpClient) {}\n\n  private loginBody: user = {\n    name: '',\n    phone: 0,\n    email: 'admin@gmail.com',\n    password: '1234',\n  };\n\n  login(userData: user) {\n    this.http\n      .post(Apis.login, userData)\n      .pipe()\n      .subscribe(\n        (res) => {\n          // response:string = res.toString();\n\n          if (res.toString() != 'null') {\n          }\n          //localStorage.setItem('token', );\n          console.log(res);\n        },\n        (error) => console.log(error)\n      );\n  }\n\n  // getUser() {\n  //   this.http\n  //     .get(this.url, { headers: { Authorization: this.bearerToken } })\n  //     .subscribe((res) => {\n  //       console.log(res);\n  //       this.userData = res;\n  //     });\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}