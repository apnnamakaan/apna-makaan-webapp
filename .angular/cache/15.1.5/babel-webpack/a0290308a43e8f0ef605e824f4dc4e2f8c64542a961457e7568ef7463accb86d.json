{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8'\n    });\n    this.login = true;\n    this.url = 'http://localhost:5000';\n  }\n  getUser() {\n    this.http.get(this.url, header).subscribe(data => {\n      console.log(data);\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAEEA,WAAW,QAGN,sBAAsB;;;AAK7B,OAAM,MAAOC,WAAW;EAUtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANxB,YAAO,GAAQ,IAAIH,WAAW,CAAC;MAC7B,cAAc,EAAE;KAEjB,CAAC;IAEF,UAAK,GAAY,IAAI;IAGrB,QAAG,GAAG,uBAAuB;EAFU;EAIvCI,OAAO;IACL,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,GAAG,EAAEC,MAAM,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MACjDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;;AAlBWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["HttpHeaders","AuthService","constructor","http","getUser","get","url","header","subscribe","data","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public getJsonValue: any;\n  public postJsonValue: any;\n\n  headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    \n  });\n\n  login: boolean = true;\n  constructor(private http: HttpClient) {}\n\n  url = 'http://localhost:5000';\n\n  getUser() {\n    this.http.get(this.url, header).subscribe((data) => {\n      console.log(data);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}