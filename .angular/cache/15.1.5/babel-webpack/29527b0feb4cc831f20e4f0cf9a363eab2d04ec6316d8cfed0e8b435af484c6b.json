{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Apis } from './../../utils/apis';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nlet FileInputComponent = class FileInputComponent {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.imageSrc = '';\n    this.imageUrl = '';\n    this.getFileEvent = new EventEmitter();\n    this.imageRes = {\n      status: '',\n      message: '',\n      image: ''\n    };\n  }\n  uploadImage(image) {\n    var formData = new FormData();\n    formData.append('file', image);\n    this.http.post(Apis.image.uploadImage, formData).subscribe({\n      next: res => {\n        this.imageRes = res;\n        this.getFileEvent.emit(this.imageRes.image);\n      },\n      error: error => {\n        this.errorService.handelError(error);\n      }\n    });\n  }\n  readURL(event) {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n      this.uploadImage(this.file);\n      const reader = new FileReader();\n      reader.onload = e => this.imageSrc = reader.result;\n      reader.readAsDataURL(this.file);\n    }\n  }\n};\n__decorate([Input()], FileInputComponent.prototype, \"file\", void 0);\n__decorate([Output()], FileInputComponent.prototype, \"getFileEvent\", void 0);\nFileInputComponent = __decorate([Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: []\n})], FileInputComponent);\nexport { FileInputComponent };","map":{"version":3,"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AAEzC,SAASC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAQ/D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAQ7BC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAPnD,aAAQ,GAAQ,EAAE;IAGlB,aAAQ,GAAW,EAAE;IAElB,iBAAY,GAAG,IAAIJ,YAAY,EAAO;IAIzC,aAAQ,GAAQ;MACrBK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;KACR;EAN0E;EAQ3EC,WAAW,CAACD,KAAU;IACpB,IAAIE,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,KAAK,CAAC;IAC9B,IAAI,CAACJ,IAAI,CAACS,IAAI,CAAChB,IAAI,CAACW,KAAK,CAACC,WAAW,EAAEC,QAAQ,CAAC,CAACI,SAAS,CAAC;MACzDC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,QAAQ,GAAGD,GAAG;QACnB,IAAI,CAACE,YAAY,CAACC,IAAI,CAAC,IAAI,CAACF,QAAQ,CAACT,KAAK,CAAC;MAC7C,CAAC;MACDY,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACf,YAAY,CAACgB,WAAW,CAACD,KAAK,CAAC;MACtC;KACD,CAAC;EACJ;EAEAE,OAAO,CAACC,KAAU;IAChB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C,IAAI,CAACC,IAAI,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACjC,IAAI,CAAChB,WAAW,CAAC,IAAI,CAACiB,IAAI,CAAC;MAE3B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAM,IAAI,CAACC,QAAQ,GAAGJ,MAAM,CAACK,MAAO;MACtDL,MAAM,CAACM,aAAa,CAAC,IAAI,CAACP,IAAI,CAAC;;EAEnC;CACD;AAtCUQ,YAARnC,KAAK,EAAE,gDAAW;AAITmC,YAATlC,MAAM,EAAE,wDAAwC;AANtCE,kBAAkB,eAL9BJ,SAAS,CAAC;EACTqC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,MAAM,EAAE;CACT,CAAC,GACWnC,kBAAkB,CAwC9B;SAxCYA,kBAAkB","names":["Apis","Component","Input","Output","EventEmitter","FileInputComponent","constructor","http","errorService","status","message","image","uploadImage","formData","FormData","append","post","subscribe","next","res","imageRes","getFileEvent","emit","error","handelError","readURL","event","target","files","file","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","__decorate","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\file-input\\file-input.component.ts"],"sourcesContent":["import { Apis } from './../../utils/apis';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ErrorService } from '../../services/helper.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: [],\n})\nexport class FileInputComponent {\n  public imageSrc: any = '';\n  @Input() file: any;\n\n  public imageUrl: string = '';\n\n  @Output() getFileEvent = new EventEmitter<any>();\n\n  constructor(private http: HttpClient, private errorService: ErrorService) {}\n\n  public imageRes: any = {\n    status: '',\n    message: '',\n    image: '',\n  };\n\n  uploadImage(image: any) {\n    var formData = new FormData();\n    formData.append('file', image);\n    this.http.post(Apis.image.uploadImage, formData).subscribe({\n      next: (res) => {\n        this.imageRes = res;\n        this.getFileEvent.emit(this.imageRes.image);\n      },\n      error: (error) => {\n        this.errorService.handelError(error);\n      },\n    });\n  }\n\n  readURL(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n      this.uploadImage(this.file);\n\n      const reader = new FileReader();\n      reader.onload = (e) => (this.imageSrc = reader.result);\n      reader.readAsDataURL(this.file);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}