{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet FileInputComponent = class FileInputComponent {\n  constructor() {\n    this.imageSrc = '';\n  }\n  readURL(event) {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => this.imageSrc = reader.result;\n      reader.readAsDataURL(file);\n    }\n  }\n};\n__decorate([Input()], FileInputComponent.prototype, \"file\", void 0);\nFileInputComponent = __decorate([Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: []\n})], FileInputComponent);\nexport { FileInputComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAACC,KAAK,QAAQ,eAAe;AAOxC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAE7BC;IADA,aAAQ,GAAQ,EAAE;EACH;EAIfC,OAAO,CAACC,KAAU;IAChB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C,MAAMC,IAAI,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAElC,MAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAM,IAAI,CAACC,QAAQ,GAAGJ,MAAM,CAACK,MAAO;MACtDL,MAAM,CAACM,aAAa,CAACP,IAAI,CAAC;;EAE9B;CACD;AAXUQ,YAARf,KAAK,EAAE,gDAAS;AAJNC,kBAAkB,eAL9BF,SAAS,CAAC;EACTiB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,MAAM,EAAE;CACT,CAAC,GACWjB,kBAAkB,CAe9B;SAfYA,kBAAkB","names":["Component","Input","FileInputComponent","constructor","readURL","event","target","files","file","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","__decorate","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\components\\file-input\\file-input.component.ts"],"sourcesContent":["import { Component,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styles: [],\n})\nexport class FileInputComponent {\n  imageSrc: any = '';\n  constructor() {}\n\n  @Input() file:any\n\n  readURL(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n\n      const reader = new FileReader();\n      reader.onload = (e) => (this.imageSrc = reader.result);\n      reader.readAsDataURL(file);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}