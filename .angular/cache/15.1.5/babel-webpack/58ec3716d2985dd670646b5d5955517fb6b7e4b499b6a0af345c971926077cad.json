{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport class DatePipe {\n  transform(value, ...args) {\n    var today = new Date();\n    var diffDays = new Date(value).getTime() - new Date(today).getTime();\n    console.log(diffDays / 24 * 60 * 60 * 1000);\n    return value;\n  }\n}\nDatePipe.ɵfac = function DatePipe_Factory(t) {\n  return new (t || DatePipe)();\n};\nDatePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"date\",\n  type: DatePipe,\n  pure: true\n});\nfunction getFormattedDate(date, prefomattedDate = false, hideYear = false) {\n  const day = date.getDate();\n  const month = MONTH_NAMES[date.getMonth()];\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  let minutes = date.getMinutes();\n  if (minutes < 10) {\n    // Adding leading zero to minutes\n    minutes = `0${minutes}`;\n  }\n  if (prefomattedDate) {\n    // Today at 10:20\n    // Yesterday at 10:20\n    return `${prefomattedDate} at ${hours}:${minutes}`;\n  }\n  if (hideYear) {\n    // 10. January at 10:20\n    return `${day}. ${month} at ${hours}:${minutes}`;\n  }\n  // 10. January 2017. at 10:20\n  return `${day}. ${month} ${year}. at ${hours}:${minutes}`;\n}","map":{"version":3,"mappings":";AAEA,MAAMA,WAAW,GAAG,CAClB,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;AAOD,OAAM,MAAOC,QAAQ;EAMnBC,SAAS,CAACC,KAAU,EAAE,GAAGC,IAAe;IACtC,IAAIC,KAAK,GAAS,IAAIC,IAAI,EAAE;IAE5B,IAAIC,QAAQ,GAAG,IAAID,IAAI,CAACH,KAAK,CAAC,CAACK,OAAO,EAAE,GAAG,IAAIF,IAAI,CAACD,KAAK,CAAC,CAACG,OAAO,EAAE;IACpEC,OAAO,CAACC,GAAG,CAAEH,QAAQ,GAAG,EAAE,GAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC7C,OAAOJ,KAAK;EACd;;AAZWF,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;;QAARA,QAAQ;EAAAU;AAAA;AAenB,SAASC,gBAAgB,CAACC,IAAI,EAAEC,eAAe,GAAG,KAAK,EAAEC,QAAQ,GAAG,KAAK;EACvE,MAAMC,GAAG,GAAGH,IAAI,CAACI,OAAO,EAAE;EAC1B,MAAMC,KAAK,GAAGlB,WAAW,CAACa,IAAI,CAACM,QAAQ,EAAE,CAAC;EAC1C,MAAMC,IAAI,GAAGP,IAAI,CAACQ,WAAW,EAAE;EAC/B,MAAMC,KAAK,GAAGT,IAAI,CAACU,QAAQ,EAAE;EAC7B,IAAIC,OAAO,GAAGX,IAAI,CAACY,UAAU,EAAE;EAE/B,IAAID,OAAO,GAAG,EAAE,EAAE;IAChB;IACAA,OAAO,GAAG,IAAKA,OAAQ,EAAE;;EAG3B,IAAIV,eAAe,EAAE;IACnB;IACA;IACA,OAAO,GAAIA,eAAgB,OAAQQ,KAAM,IAAKE,OAAQ,EAAE;;EAG1D,IAAIT,QAAQ,EAAE;IACZ;IACA,OAAO,GAAIC,GAAI,KAAME,KAAM,OAAQI,KAAM,IAAKE,OAAQ,EAAE;;EAG1D;EACA,OAAO,GAAIR,GAAI,KAAME,KAAM,IAAKE,IAAK,QAASE,KAAM,IAAKE,OAAQ,EAAE;AACrE","names":["MONTH_NAMES","DatePipe","transform","value","args","today","Date","diffDays","getTime","console","log","pure","getFormattedDate","date","prefomattedDate","hideYear","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\pipes\\date.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nconst MONTH_NAMES = [\n  'January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'\n];\n\n\n\n@Pipe({\n  name: 'date',\n})\nexport class DatePipe implements PipeTransform {\n\n\n\n\n  \n  transform(value: any, ...args: unknown[]): unknown {\n    var today: Date = new Date();\n\n    var diffDays = new Date(value).getTime() - new Date(today).getTime();\n    console.log((diffDays / 24) * 60 * 60 * 1000);\n    return value;\n  }\n\n\n  function getFormattedDate(date, prefomattedDate = false, hideYear = false) {\n    const day = date.getDate();\n    const month = MONTH_NAMES[date.getMonth()];\n    const year = date.getFullYear();\n    const hours = date.getHours();\n    let minutes = date.getMinutes();\n  \n    if (minutes < 10) {\n      // Adding leading zero to minutes\n      minutes = `0${ minutes }`;\n    }\n  \n    if (prefomattedDate) {\n      // Today at 10:20\n      // Yesterday at 10:20\n      return `${ prefomattedDate } at ${ hours }:${ minutes }`;\n    }\n  \n    if (hideYear) {\n      // 10. January at 10:20\n      return `${ day }. ${ month } at ${ hours }:${ minutes }`;\n    }\n  \n    // 10. January 2017. at 10:20\n    return `${ day }. ${ month } ${ year }. at ${ hours }:${ minutes }`;\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}