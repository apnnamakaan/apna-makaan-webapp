{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Apis } from '../utils/apis';\nimport { HttpHeaders } from '@angular/common/http';\nlet UserService = class UserService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    this.token = localStorage.getItem('token') || '';\n    this.apiResponse = {\n      status: '',\n      message: ''\n    };\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: this.token\n    });\n  }\n  getUser() {\n    this.http.get(Apis.user.getUser, this.headers).subscribe({\n      next: res => {\n        this.apiResponse = res;\n        this.toastr.success(this.apiResponse.message, '', {\n          progressBar: true\n        });\n      },\n      error: error => {\n        this.apiResponse = error.error;\n        this.toastr.warning(this.apiResponse.message, '', {\n          progressBar: true\n        });\n      }\n    });\n  }\n};\nUserService = __decorate([Injectable({\n  providedIn: 'root'\n})], UserService);\nexport { UserService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,IAAI,QAAQ,eAAe;AACpC,SAAqBC,WAAW,QAAQ,sBAAsB;AAMvD,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAatBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAZ7C,UAAK,GAAWC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAEnD,gBAAW,GAAQ;MACxBC,MAAM,EAAC,EAAE;MACTC,OAAO,EAAC;KACT;IAEM,YAAO,GAAQ,IAAIR,WAAW,CAAC;MACpC,cAAc,EAAE,iCAAiC;MACjDS,aAAa,EAAE,IAAI,CAACC;KACrB,CAAC;EAEoE;EAEtEC,OAAO;IACL,IAAI,CAACR,IAAI,CAACS,GAAG,CAACb,IAAI,CAACc,IAAI,CAACF,OAAO,EAAE,IAAI,CAACG,OAAO,CAAC,CAACC,SAAS,CAAC;MACvDC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,WAAW,GAAGD,GAAG;QACtB,IAAI,CAACb,MAAM,CAACe,OAAO,CAAC,IAAI,CAACD,WAAW,CAACV,OAAO,EAAE,EAAE,EAAE;UAChDY,WAAW,EAAE;SACd,CAAC;MACJ,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACH,WAAW,GAAGG,KAAK,CAACA,KAAK;QAC9B,IAAI,CAACjB,MAAM,CAACkB,OAAO,CAAC,IAAI,CAACJ,WAAW,CAACV,OAAO,EAAE,EAAE,EAAE;UAChDY,WAAW,EAAE;SACd,CAAC;MACJ;KACD,CAAC;EACJ;CACD;AA/BYnB,WAAW,eAHvBH,UAAU,CAAC;EACVyB,UAAU,EAAE;CACb,CAAC,GACWtB,WAAW,CA+BvB;SA/BYA,WAAW","names":["Injectable","Apis","HttpHeaders","UserService","constructor","http","toastr","localStorage","getItem","status","message","Authorization","token","getUser","get","user","headers","subscribe","next","res","apiResponse","success","progressBar","error","warning","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Apis } from '../utils/apis';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { user } from './../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  public token: string = localStorage.getItem('token') || '';\n\n  public apiResponse: any = {\n    status:'',\n    message:''\n  };\n\n  public headers: any = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    Authorization: this.token,\n  });\n\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\n\n  getUser() {\n    this.http.get(Apis.user.getUser, this.headers).subscribe({\n      next: (res) => {\n        this.apiResponse = res;\n        this.toastr.success(this.apiResponse.message, '', {\n          progressBar: true,\n        });\n      },\n      error: (error) => {\n        this.apiResponse = error.error;\n        this.toastr.warning(this.apiResponse.message, '', {\n          progressBar: true,\n        });\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}