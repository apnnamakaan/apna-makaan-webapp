{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DatePipe {\n  transform(value, ...args) {\n    var today = new Date();\n    var diffDays = new Date(value).getTime() - new Date(today).getTime();\n    console.log(diffDays / 24 * 60 * 60 * 1000);\n    return value;\n  }\n  timeSince(date) {\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var interval = seconds / 31536000;\n    if (interval > 1) {\n      return Math.floor(interval) + \" years\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + \" months\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + \" days\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + \" hours\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n  }\n}\nDatePipe.ɵfac = function DatePipe_Factory(t) {\n  return new (t || DatePipe)();\n};\nDatePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"date\",\n  type: DatePipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,QAAQ;EACnBC,SAAS,CAACC,KAAU,EAAE,GAAGC,IAAe;IACtC,IAAIC,KAAK,GAAS,IAAIC,IAAI,EAAE;IAE5B,IAAIC,QAAQ,GAAG,IAAID,IAAI,CAACH,KAAK,CAAC,CAACK,OAAO,EAAE,GAAG,IAAIF,IAAI,CAACD,KAAK,CAAC,CAACG,OAAO,EAAE;IACpEC,OAAO,CAACC,GAAG,CAAEH,QAAQ,GAAG,EAAE,GAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC7C,OAAOJ,KAAK;EACd;EAECQ,SAAS,CAACC,IAAS;IAElB,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,IAAIT,IAAI,EAAE,GAAGM,IAAI,IAAI,IAAI,CAAC;IAEpD,IAAII,QAAQ,GAAGH,OAAO,GAAG,QAAQ;IAEjC,IAAIG,QAAQ,GAAG,CAAC,EAAE;MAChB,OAAOF,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,QAAQ;;IAExCA,QAAQ,GAAGH,OAAO,GAAG,OAAO;IAC5B,IAAIG,QAAQ,GAAG,CAAC,EAAE;MAChB,OAAOF,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,SAAS;;IAEzCA,QAAQ,GAAGH,OAAO,GAAG,KAAK;IAC1B,IAAIG,QAAQ,GAAG,CAAC,EAAE;MAChB,OAAOF,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,OAAO;;IAEvCA,QAAQ,GAAGH,OAAO,GAAG,IAAI;IACzB,IAAIG,QAAQ,GAAG,CAAC,EAAE;MAChB,OAAOF,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,QAAQ;;IAExCA,QAAQ,GAAGH,OAAO,GAAG,EAAE;IACvB,IAAIG,QAAQ,GAAG,CAAC,EAAE;MAChB,OAAOF,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,UAAU;;IAE1C,OAAOF,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,GAAG,UAAU;EACzC;;AAnCWZ,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;;QAARA,QAAQ;EAAAgB;AAAA","names":["DatePipe","transform","value","args","today","Date","diffDays","getTime","console","log","timeSince","date","seconds","Math","floor","interval","pure"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\pipes\\date.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'date',\n})\nexport class DatePipe implements PipeTransform {\n  transform(value: any, ...args: unknown[]): unknown {\n    var today: Date = new Date();\n\n    var diffDays = new Date(value).getTime() - new Date(today).getTime();\n    console.log((diffDays / 24) * 60 * 60 * 1000);\n    return value;\n  }\n  \n   timeSince(date:Date) {\n\n    var seconds = Math.floor((new Date() - date) / 1000);\n  \n    var interval = seconds / 31536000;\n  \n    if (interval > 1) {\n      return Math.floor(interval) + \" years\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + \" months\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + \" days\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + \" hours\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n  }\n \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}