{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@angular/router\";\nexport class ErrorService {\n  constructor(toastr,\n  // private authService: AuthService,\n  router) {\n    this.toastr = toastr;\n    this.router = router;\n    this.apiResponse = {\n      status: '',\n      message: ''\n    };\n  }\n  handelError(error) {\n    switch (error.status) {\n      case 0:\n        {\n          this.toastr.warning('connection refused', '', {\n            progressBar: true\n          });\n          break;\n        }\n      case 500:\n        {\n          this.toastr.warning('connection refused', '', {\n            progressBar: true\n          });\n          break;\n        }\n      default:\n        {\n          this.apiResponse = error.error;\n          this.toastr.warning(this.apiResponse.message, '', {\n            progressBar: true\n          });\n          break;\n        }\n    }\n  }\n}\nErrorService.ɵfac = function ErrorService_Factory(t) {\n  return new (t || ErrorService)(i0.ɵɵinject(i1.ToastrService), i0.ɵɵinject(i2.Router));\n};\nErrorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ErrorService,\n  factory: ErrorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EAMvBC,YACUC,MAAqB;EAC7B;EACQC,MAAc;IAFd,WAAM,GAAND,MAAM;IAEN,WAAM,GAANC,MAAM;IART,gBAAW,GAAQ;MACxBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;KACV;EAME;EAEHC,WAAW,CAACC,KAAU;IACpB,QAAQA,KAAK,CAACH,MAAM;MAClB,KAAK,CAAC;QAAE;UACN,IAAI,CAACF,MAAM,CAACM,OAAO,CAAC,oBAAoB,EAAE,EAAE,EAAE;YAC5CC,WAAW,EAAE;WACd,CAAC;UACF;;MAGF,KAAK,GAAG;QAAE;UACR,IAAI,CAACP,MAAM,CAACM,OAAO,CAAC,oBAAoB,EAAE,EAAE,EAAE;YAC5CC,WAAW,EAAE;WACd,CAAC;UACF;;MAEF;QAAS;UACP,IAAI,CAACC,WAAW,GAAGH,KAAK,CAACA,KAAK;UAC9B,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,IAAI,CAACE,WAAW,CAACL,OAAO,EAAE,EAAE,EAAE;YAChDI,WAAW,EAAE;WACd,CAAC;UACF;;IACD;EAEL;;AAnCWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["ErrorService","constructor","toastr","router","status","message","handelError","error","warning","progressBar","apiResponse","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pika\\Documents\\apna-makaan\\apna-makaan-webapp\\src\\app\\shared\\services\\error.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n  public apiResponse: any = {\n    status: '',\n    message: '',\n  };\n\n  constructor(\n    private toastr: ToastrService,\n    // private authService: AuthService,\n    private router: Router\n  ) {}\n\n  handelError(error: any) {\n    switch (error.status) {\n      case 0: {\n        this.toastr.warning('connection refused', '', {\n          progressBar: true,\n        });\n        break;\n      }\n\n      case 500: {\n        this.toastr.warning('connection refused', '', {\n          progressBar: true,\n        });\n        break;\n      }\n      default: {\n        this.apiResponse = error.error;\n        this.toastr.warning(this.apiResponse.message, '', {\n          progressBar: true,\n        });\n        break;\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}